###############################################################################
#                                                                             #
#    Regular Expressions Exercise                                             #
#                                                                             #
#    Objective: Use Sublime Text's search function with regular expressions   #
#    to match specific patterns in provided text samples. Paste the regex     #
#    below each task.                                                         #
#                                                                             #
#    Test each regular expression by typing them into the search bar and      #
#    observing the highlighted matches in Sublime Text. If your expression    #
#    does not work as expected, adjust it based on what is or isn't being     #
#    matched and try again.                                                   #
#                                                                             #
#    When you have finished with this exercise, add it to your coursework     #
#    repository `python_fudan_exercises.` Add the file with `git add .` and   #
#    push your changes to GitHub. Check the Github website to make sure they  #
#    were published as intended.                                              #
#                                                                             #
###############################################################################

###############################################################################
#                                                                             #
#    Task A: Write a regular expression to match phone numbers.               #
#    Hint: Think about how phone numbers are structured; usually, digits are  #
#    grouped in patterns separated by hyphens. Consider using \d or [0-9] to  #
#    match digits. Try using quantifiers.                                     #
#                                                                             #
#    Example Text: "Call me at 415-555-1234 or 415-555-9876."                 #
#                                                                             #
###############################################################################

\d{3}\-\d{3}\-\d{4}

###############################################################################
#                                                                             #
#    Task B: Write a regular expression to match all of the following words:  #
#    'university', 'universities', 'college', and 'colleges'.                 #
#                                                                             #
#    Hint: The words have common roots such as "universit" and "college".     #
#    You might use grouping to handle different suffixes and consider         #
#    using the word boundary \b to ensure you match whole words. Reference    #
#    the slide ``Grouping in Regular Expressions'' (slide 13).                #
#                                                                             #
#    Example Text:                                                            #
#                                                                             #
#        "Visit us at 123 University Avenue or at 456 Colleges Blvd."         #
#                                                                             #
###############################################################################

###############################################################################
#                                                                             #
#    Task C: Write a regular expression to match email addresses.             #
#    Hint: An email address usually consists of alphanumeric characters,      #
#    potentially including '.', followed by '@', then a domain name.          #
#    Example Text: "Send your feedback to contact@example.com."               #
#                                                                             #
###############################################################################

###############################################################################
#                                                                             #
#    Task D: Write a regular expression to find monetary amounts in dollars.  #
#    Hint: Monetary amounts usually start with a '$' followed by digits. You  #
#    might need to account for commas in larger amounts or decimal points.    #
#    Example Text: "The total costs are $1,000.00 and $250.50."               #
#                                                                             #
###############################################################################

###############################################################################
#                                                                             #
#    Task E: Use a regular expression to match dates in the format MM/DD/YYYY.#
#    Hint: Use grouping to separate month, day, and year. Remember to restrict#
#    the range for months (01-12) and days (01-31).                           #
#    Example Text: "Important dates include 12/25/2021 and 01/01/2022."       #
#                                                                             #
###############################################################################

###############################################################################
#                                                                             #
#    Task F: Write a regular expression to find all words that start with 'b' #
#    and end with 'e'.                                                        #
#    Hint: Words start with 'b', end with 'e', and have any number of         #
#    characters in between. Use anchors and a character class.                #
#    Example Text: "Please bring your own bottle and come before we close."   #
#                                                                             #
###############################################################################
